========================================================================
Struct as type
========================================================================
struct Foo {
    age: int;
}

fun test(): Fo<caret> {
}
------------------------------------------------------------------------
struct Foo {
    age: int;
}

fun test(): Foo<caret> {
}

========================================================================
Struct as expression
========================================================================
struct Foo {
    age: int;
}

fun test() {
    let a = Foo<caret>;
}
------------------------------------------------------------------------
struct Foo {
    age: int;
}

fun test() {
    let a = Foo {<caret>};
}

========================================================================
Empty struct as expression
========================================================================
struct debug {}

fun test() {
    let a = deb<caret>;
}
------------------------------------------------------------------------
struct debug {}

fun test() {
    let a = debug<caret>;
}

========================================================================
Struct field modifiers completion for field without modifiers
========================================================================
struct Foo {
    <caret>foo: int
}
------------------------------------------------------------------------
struct Foo {
    private <caret>foo: int
}

========================================================================
Struct field modifiers completion for field with modifier
========================================================================
struct Foo {
    private <caret>foo: int
}
------------------------------------------------------------------------
struct Foo {
    private readonly <caret>foo: int
}
