========================================================================
Receiver type parameters
========================================================================
struct Foo<T> {}

fun Foo<<caret>TName>.foo(): TName {}
------------------------------------------------------------------------
References: [2:22]
Scope: LocalSearchScope:
fun Foo<TName>.foo(): TName {}

========================================================================
T receiver
========================================================================
fun T.foo(): <caret>T {}
------------------------------------------------------------------------
References: [0:13]
Scope: LocalSearchScope:
fun T.foo(): T {}

========================================================================
T receiver from decl
========================================================================
fun <caret>T.foo(): T {}
------------------------------------------------------------------------
References: [0:13]
Scope: LocalSearchScope:
fun T.foo(): T {}

========================================================================
Function type parameters
========================================================================
fun foo<<caret>T>(a: T): T {}
------------------------------------------------------------------------
References: [0:14, 0:18]
Scope: LocalSearchScope:
fun foo<T>(a: T): T {}

========================================================================
Method type parameters
========================================================================
fun int.foo<<caret>T>(a: T): T {}
------------------------------------------------------------------------
References: [0:18, 0:22]
Scope: LocalSearchScope:
fun int.foo<T>(a: T): T {}

========================================================================
Struct type parameters
========================================================================
struct Foo<<caret>T> {
    field: T
    other: Bar<T>
}
------------------------------------------------------------------------
References: [1:11, 2:15]
Scope: LocalSearchScope:
struct Foo<T> {
    field: T
    other: Bar<T>
}

========================================================================
Type alias type parameters
========================================================================
type Foo<<caret>T> = T | null
------------------------------------------------------------------------
References: [0:14]
Scope: LocalSearchScope:
type Foo<T> = T | null
